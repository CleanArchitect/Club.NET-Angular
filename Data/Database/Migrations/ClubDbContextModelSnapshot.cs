// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Data
{
    [DbContext(typeof(ClubDbContext))]
    partial class ClubDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("club")
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Evenement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateOnly>("Datum")
                        .HasColumnType("date")
                        .HasColumnName("datum");

                    b.HasKey("Id");

                    b.ToTable("evenement", "club");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Domain.KnwuWedstrijdCategorie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("KnwuWedstrijdId")
                        .HasColumnType("uuid")
                        .HasColumnName("knwu_wedstrijd_id");

                    b.Property<string>("Naam")
                        .HasColumnType("text")
                        .HasColumnName("naam");

                    b.Property<short[]>("Startnummers")
                        .HasColumnType("smallint[]")
                        .HasColumnName("startnummers");

                    b.HasKey("Id")
                        .HasName("pk_wedstrijd_categorie");

                    b.HasIndex("KnwuWedstrijdId")
                        .HasDatabaseName("ix_wedstrijd_categorie_knwu_wedstrijd_id");

                    b.ToTable("wedstrijd_categorie", "knwu");
                });

            modelBuilder.Entity("Domain.KnwuWedstrijdDeelnemer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("KnwuId")
                        .HasColumnType("text")
                        .HasColumnName("knwu_id");

                    b.Property<Guid?>("KnwuWedstrijdId")
                        .HasColumnType("uuid")
                        .HasColumnName("knwu_wedstrijd_id");

                    b.Property<short>("Startnummer")
                        .HasColumnType("smallint")
                        .HasColumnName("startnummer");

                    b.Property<string>("UciId")
                        .HasColumnType("text")
                        .HasColumnName("uci_id");

                    b.HasKey("Id")
                        .HasName("pk_wedstrijd_deelnemer");

                    b.HasIndex("KnwuWedstrijdId")
                        .HasDatabaseName("ix_wedstrijd_deelnemer_knwu_wedstrijd_id");

                    b.ToTable("wedstrijd_deelnemer", "knwu");
                });

            modelBuilder.Entity("Domain.KnwuWedstrijd", b =>
                {
                    b.HasBaseType("Domain.Evenement");

                    b.Property<decimal>("Bedrag")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("bedrag");

                    b.Property<string>("KnwuWedstrijdnummer")
                        .HasColumnType("text")
                        .HasColumnName("knwu_wedstrijdnummer");

                    b.Property<string>("Naam")
                        .HasColumnType("text")
                        .HasColumnName("naam");

                    b.ToTable("wedstrijd", "knwu");
                });

            modelBuilder.Entity("Domain.KnwuWedstrijdCategorie", b =>
                {
                    b.HasOne("Domain.KnwuWedstrijd", null)
                        .WithMany("Categorieen")
                        .HasForeignKey("KnwuWedstrijdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_wedstrijd_categorie_knwu_wedstrijden_knwu_wedstrijd_id");
                });

            modelBuilder.Entity("Domain.KnwuWedstrijdDeelnemer", b =>
                {
                    b.HasOne("Domain.KnwuWedstrijd", null)
                        .WithMany("Deelnemers")
                        .HasForeignKey("KnwuWedstrijdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_wedstrijd_deelnemer_knwu_wedstrijden_knwu_wedstrijd_id");
                });

            modelBuilder.Entity("Domain.KnwuWedstrijd", b =>
                {
                    b.HasOne("Domain.Evenement", null)
                        .WithOne()
                        .HasForeignKey("Domain.KnwuWedstrijd", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_wedstrijd_evenement_id");
                });

            modelBuilder.Entity("Domain.KnwuWedstrijd", b =>
                {
                    b.Navigation("Categorieen");

                    b.Navigation("Deelnemers");
                });
#pragma warning restore 612, 618
        }
    }
}
